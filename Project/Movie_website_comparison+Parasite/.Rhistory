c_books <- rbind(books,c_books)
}
View(c_books)
for (i in 1:6) {
url <- paste0(base_url,page,i,category)
html <- read_html(url)
html
book_list <- html_node(html,'.sub_book_list_area')
book_list
lis <- html_nodes(book_list, "li")
html %>%
html_node('.sub_book_list_area') %>%
html_nodes('li') -> lis
lis
price <- c()
title <- c()
writer <- c()
for (li in lis) {
pr <- html_node(li, '.price') %>% html_text()
pr <- gsub('\\\\',"",pr)
price <- c(price,pr)
title <- c(title, html_node(li, '.book_tit') %>% html_text())
writer <- c(writer,html_node(li, '.book_writer') %>% html_text())
#cat(title, writer, price, '\n')
}
books <- data.frame(title = title, writer = writer, price = price)
computer_books <- rbind.data.frame(computer_books,books)
}
View(computer_books)
library(openxlsx)
urltest <- http://www.hanbit.co.kr/academy/books/category_list.html?page=5&cate_cd=004008&srt=p_pub_date
urltest <- "http://www.hanbit.co.kr/academy/books/category_list.html?page=5&cate_cd=004008&srt=p_pub_date"
html_test <- read_html(urltest)
lis
lis
book_list
for (li in lis) {
pr <- html_node(li, '.price') %>% html_text()
pr <- gsub('\\\\',"",pr)
price <- c(price,pr)
title <- c(title, html_node(li, '.book_tit') %>% html_text())
writer <- c(writer,html_node(li, '.book_writer') %>% html_text())
#cat(title, writer, price, '\n')
}
price
lis
html_test %>%
html_node('.sub_book_list_area') %>%
html_nodes('li') -> lis
lis
book_list <- html_node(html_test,'.sub_book_list_area')
book_list
lis <- html_nodes(book_list, "li")
html_test %>%
html_node('.sub_book_list_area') %>%
html_nodes('li') -> lis
lis
class(lis)
base_url <- "http://www.hanbit.co.kr/academy/books/category_list.html?"
page <- 'page='
category <-  "&cate_cd=004008&srt=p_pub_date"
for (i in 1:10) {
url <- paste0(base_url,page,i,category)
html <- read_html(url)
html
book_list <- html_node(html,'.sub_book_list_area')
book_list
lis <- html_nodes(book_list, "li")
if(lis == (0)) {
break;
}else {
price <- c()
title <- c()
writer <- c()
for (li in lis) {
pr <- html_node(li, '.price') %>% html_text()
pr <- gsub('\\\\',"",pr)
price <- c(price,pr)
title <- c(title, html_node(li, '.book_tit') %>% html_text())
writer <- c(writer,html_node(li, '.book_writer') %>% html_text())
#cat(title, writer, price, '\n')
}
books <- data.frame(title = title, writer = writer, price = price)
computer_books <- rbind.data.frame(computer_books,books)
}
}
list
lis
lis <- html_nodes(book_list, "li")
lis
urltest <- "http://www.hanbit.co.kr/academy/books/category_list.html?page=5&cate_cd=004008&srt=p_pub_date"
html_test <- read_html(urltest)
book_list <- html_node(html_test,'.sub_book_list_area')
book_list
lis <- html_nodes(book_list, "li")
lis
if(lis == xml_nodeset(0)) {
break;
}else {
price <- c()
title <- c()
writer <- c()
for (li in lis) {
pr <- html_node(li, '.price') %>% html_text()
pr <- gsub('\\\\',"",pr)
price <- c(price,pr)
title <- c(title, html_node(li, '.book_tit') %>% html_text())
writer <- c(writer,html_node(li, '.book_writer') %>% html_text())
#cat(title, writer, price, '\n')
}
books <- data.frame(title = title, writer = writer, price = price)
computer_books <- rbind.data.frame(computer_books,books)
}
}
lis
price <- c()
title <- c()
writer <- c()
for (li in lis) {
pr <- html_node(li, '.price') %>% html_text()
pr <- gsub('\\\\',"",pr)
price <- c(price,pr)
title <- c(title, html_node(li, '.book_tit') %>% html_text())
writer <- c(writer,html_node(li, '.book_writer') %>% html_text())
#cat(title, writer, price, '\n')
}
price
for (i in 1:10) {
url <- paste0(base_url,page,i,category)
html <- read_html(url)
html
book_list <- html_node(html,'.sub_book_list_area')
book_list
lis <- html_nodes(book_list, "li")
price <- c()
title <- c()
writer <- c()
for (li in lis) {
pr <- html_node(li, '.price') %>% html_text()
pr <- gsub('\\\\',"",pr)
price <- c(price,pr)
title <- c(title, html_node(li, '.book_tit') %>% html_text())
writer <- c(writer,html_node(li, '.book_writer') %>% html_text())
#cat(title, writer, price, '\n')
}
if(price == NULL) {
break;
}else {
books <- data.frame(title = title, writer = writer, price = price)
computer_books <- rbind.data.frame(computer_books,books)
}
}
if(price == NULL) {
break
}else {
books <- data.frame(title = title, writer = writer, price = price)
computer_books <- rbind.data.frame(computer_books,books)
}
for (i in 1:10) {
url <- paste0(base_url,page,i,category)
html <- read_html(url)
html
book_list <- html_node(html,'.sub_book_list_area')
book_list
lis <- html_nodes(book_list, "li")
price <- c()
title <- c()
writer <- c()
for (li in lis) {
pr <- html_node(li, '.price') %>% html_text()
pr <- gsub('\\\\',"",pr)
price <- c(price,pr)
title <- c(title, html_node(li, '.book_tit') %>% html_text())
writer <- c(writer,html_node(li, '.book_writer') %>% html_text())
#cat(title, writer, price, '\n')
}
if(is.null(price)) {
break
}else {
books <- data.frame(title = title, writer = writer, price = price)
computer_books <- rbind.data.frame(computer_books,books)
}
}
View(computer_books)
computer_books <- data.frame()
base_url <- "http://www.hanbit.co.kr/academy/books/category_list.html?"
page <- 'page='
category <-  "&cate_cd=004007&srt=p_pub_date"
for (i in 1:6) {
url <- paste0(base_url,page,i,category)
html <- read_html(url)
html
book_list <- html_node(html,'.sub_book_list_area')
book_list
lis <- html_nodes(book_list, "li")
html %>%
html_node('.sub_book_list_area') %>%
html_nodes('li') -> lis
lis
price <- c()
title <- c()
writer <- c()
for (li in lis) {
pr <- html_node(li, '.price') %>% html_text()
pr <- gsub('\\\\',"",pr)
price <- c(price,pr)
title <- c(title, html_node(li, '.book_tit') %>% html_text())
writer <- c(writer,html_node(li, '.book_writer') %>% html_text())
#cat(title, writer, price, '\n')
}
books <- data.frame(title = title, writer = writer, price = price)
computer_books <- rbind.data.frame(computer_books,books)
}
View(computer_books)
for (i in 1:10) {
url <- paste0(base_url,page,i,category)
html <- read_html(url)
html
book_list <- html_node(html,'.sub_book_list_area')
book_list
lis <- html_nodes(book_list, "li")
price <- c()
title <- c()
writer <- c()
for (li in lis) {
pr <- html_node(li, '.price') %>% html_text()
pr <- gsub('\\\\',"",pr)
price <- c(price,pr)
title <- c(title, html_node(li, '.book_tit') %>% html_text())
writer <- c(writer,html_node(li, '.book_writer') %>% html_text())
#cat(title, writer, price, '\n')
}
if(is.null(price)) {
break
}else {
books <- data.frame(title = title, writer = writer, price = price)
IT_books <- rbind.data.frame(IT_books,books)
}
}
programming_books <- data.frame()
#finding the link and list of categories
text <- read_html(base_url)
category_list <- html_nodes(text, ".node_body")
category_list
category_list <- html_nodes(text, ".category_books")
category_list
text
View(text)
html <- read_html(url)
html
category_list <- html_nodes(text, ".lnb_area") %>% html_nodes('li')
category_list
View(category_list)
lis
category_list
link <- c()
category_name <- c()
category_list1 <- for(li in category_list) {
link <- c(link,html_node(category_list,'category_books') %>% html_text())
#category_name <-
}
category_list1
category_list1 <- for(li in category_list) {
link <- c(link,html_node(category_list,'category_books') %>% html_text())
#category_name <-
}
category_list1
html_node(category_list,'.category_books')
html_node(category_list,'category_books')
html_node(category_list,'category_books')
category
category_list
html_node(category_list,'category_books')
html_node(category_list,'li')
html_nodes(category_list,'li')
html_category %>% html_nodes('li') %>%
link <- gsub("<li><a href=","",li)
html_category <- category_list %>% html_nodes('li') %>%
link <- gsub("<li><a href=","",li)
html_category <- category_list %>%
html_nodes('li') %>%
link <- gsub("<li><a href=","",li)
html_category <- category_list %>%
html_nodes('li') %>%
link <- gsub("<li><a href=","",li)
html_category <- category_list %>%
html_nodes('li') #%>%
html_category
link <- gsub("<li><a href=","",li)
li
link
link <- gsub(">+")
link <- gsub(">+","",li)
link
link <- gsub(">","",li)
link
link <- gsub("<li><a href=","",li)
link
link <- gsub(">전체도서목록","",li)
link
link <- gsub("http://www.hanbit.co.kr/academy/books/category_list.html?","",li)
link
link <- gsub("<li><a href=","",html_category)
link
link <- gsub("http://www.hanbit.co.kr/academy/books/category_list.html?","",li)
link
link <- gsub("http://www.hanbit.co.kr/academy/books/category_list.html?","",html_category)
link
link <- gsub("<li><a href=\"?http://www.hanbit.co.kr/academy/books/category_list.html?","",html_category)
link
link <- gsub("</a></li>",""link)
link
link <- gsub("</a></li>","",link)
link
link <-substr(link,1,13)
link
link <- gsub("<li><a href=\"?http://www.hanbit.co.kr/academy/books/category_list.html?","",html_category)
link <- gsub("</a></li>","",link)
link <-substr(link,1,16)
link
category_list1 <-substr(link,1,16)
clas(category_list1)
class(category_list1)
as.data.frame(category_list1)
catagory_list1 <- gsub("?","&",category_list1)
category_list1
category_list1 <- gsub("?","&",category_list1)
category_list1
catagory_list1 <- gsub("?","&",category_list1)
for (i in 1:2929) {
if (i %% 500 == 0) {print(i)}
html <- read_html(paste0(url,i))
html %>%
html_node(".score_result") %>%
html_nodes("li") -> lis
for (li in lis) {
rating <- c(rating, html_node(li, '.star_score') %>% html_text('em') %>% trim())
li %>%
html_node('.score_reple') %>%
html_text('p') %>%
trim() -> tmp
idx <- str_locate(tmp, "\r")
review <- c(review, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
writer <- c(writer, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
date <- c(date, str_sub(tmp, 1, idx[1]-1))
#print(time)
}
}
setwd("d:/workspace/R_Crawling/Project/Movie_website_comparison+Parasite/")
library(rvest)
library(stringr)
library(XML)
library(dplyr)
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
trim2 <- function(x) gsub("\\n","",x)
trim3 <- function(x) gsub("\\t","",x)
trim4 <- function(x) gsub("\\r","",x)
url <- "https://movie.naver.com/movie/bi/mi/pointWriteFormList.nhn?code=161967&type=after&isActualPointWriteExecute=false&isMileageSubscriptionAlready=false&isMileageSubscriptionReject=false&page="
url
rating <- c()
review <- c()
date <- c()
#2929
for (i in 1:2929) {
if (i %% 500 == 0) {print(i)}
html <- read_html(paste0(url,i))
html %>%
html_node(".score_result") %>%
html_nodes("li") -> lis
for (li in lis) {
rating <- c(rating, html_node(li, '.star_score') %>% html_text('em') %>% trim())
li %>%
html_node('.score_reple') %>%
html_text('p') %>%
trim() -> tmp
idx <- str_locate(tmp, "\r")
review <- c(review, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
writer <- c(writer, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
date <- c(date, str_sub(tmp, 1, idx[1]-1))
#print(time)
}
}
df.review <- data.frame(rating = rating, user_review = review, date = date)
df_naver.review <- df.review
df_naver.review$user_review
names()
# Word cloud of review words to see what words user used to describe the movie
library(wordcloud2)
library(KoNLP)
View(df_naver.review)
View(review)
write(review, "naver_review.txt")
data <- readLines('naver_review.txt')
data1 <- sapply(data, extractNoun, USE.NAMES = F)
data1
data3 <- unlist(data1)
data3 <- gsub("\\d+","",data3) ## 숫자 없애기
data3 <- Filter(function(x) {nchar(x) >= 2}, data3) #2글자 이상 필터
data4 <- str_replace_all(data3, "[^[:alpha:]]","") #한글, 영어이외는 삭제
write(data4,"parasite_Naver.txt")
data5 <- read.table("parasite.txt")
data5 <- read.table("parasite_Naver.txt")
nrow(data5)
wordcount <- table(data5)
wordcloud <-sort(wordcount,decreasing = T)
head(wordcloud)
txt2 <- readLines("네이버영화gsub.txt")
for(i in 1:length(txt2)) {
data4 <- gsub(txt2[i],"",data3)
}
write(data4,"parasite_Naver.txt")
data5 <- read.table("parasite_Naver.txt")
nrow(data5)
wordcount <- table(data5)
wordcloud <-sort(wordcount,decreasing = T)
head(wordcloud)
for(i in 1:length(txt2)) {
data4 <- gsub(txt2[i],"",data3)
}
write(data4,"parasite_Naver.txt")
data5 <- read.table("parasite_Naver.txt")
nrow(data5)
wordcount <- table(data5)
wordcloud <-sort(wordcount,decreasing = T)
head(wordcloud)
txt2 <- readLines("네이버영화gsub.txt")
for(i in 1:length(txt2)) {
data4 <- gsub(txt2[i],"",data3)
}
write(data4,"parasite_Naver.txt")
data5 <- read.table("parasite_Naver.txt")
nrow(data5)
wordcount <- table(data5)
wordcloud <-sort(wordcount,decreasing = T)
head(wordcloud)
# 기생충 네티즌 영화 분석
# 네이버 분석
setwd("d:/workspace/R_Crawling/Project/Movie_website_comparison+Parasite/")
# Word cloud of review words to see what words user used to describe the movie
library(wordcloud2)
library(KoNLP)
write(review, "naver_review.txt")
data <- readLines('naver_review.txt')
data1 <- sapply(data, extractNoun, USE.NAMES = F)
data3 <- unlist(data1)
data3 <- gsub("\\d+","",data3) ## 숫자 없애기
data3 <- Filter(function(x) {nchar(x) >= 2}, data3) #2글자 이상 필터
data4 <- str_replace_all(data3, "[^[:alpha:]]","") #한글, 영어이외는 삭제
data3 <- unlist(data1)
data3 <- gsub("\\d+","",data3) ## 숫자 없애기
data3 <- Filter(function(x) {nchar(x) >= 2}, data3) #2글자 이상 필터
data4 <- str_replace_all(data3, "[^[:alpha:]]","") #한글, 영어이외는 삭제
data4 <- gsub(txt2[i],"",data4)
write(data4,"parasite_Naver.txt")
data5 <- read.table("parasite_Naver.txt")
nrow(data5)
wordcount <- table(data5)
wordcloud <-sort(wordcount,decreasing = T)
head(wordcloud)
txt2 <- readLines("네이버영화gsub.txt")
for(i in 1:length(txt2)) {
data4 <- gsub(txt2[i],"",data4)
}
write(data4,"parasite_Naver.txt")
data5 <- read.table("parasite_Naver.txt")
nrow(data5)
wordcount <- table(data5)
wordcloud <-sort(wordcount,decreasing = T)
head(wordcloud)
txt2 <- readLines("네이버영화gsub.txt")
for(i in 1:length(txt2)) {
data4 <- gsub(txt2[i],"",data4)
}
# 기생충 네티즌 영화 분석
# 네이버 분석
setwd("d:/workspace/R_Crawling/Project/Movie_website_comparison+Parasite/")
write(data4,"parasite_Naver.txt")
data5 <- read.table("parasite_Naver.txt")
nrow(data5)
wordcount <- table(data5)
wordcloud <-sort(wordcount,decreasing = T)
head(wordcloud)
wordcloud2(wordcloud)
length(txt2)
txt2[1]
txt2 <- readLines("네이버영화gsub.txt")
for(i in 1:length(txt2)) {
data4 <- gsub(txt2[i],"",data4)
}
length(txt2)
write(data4,"parasite_Naver.txt")
data5 <- read.table("parasite_Naver.txt")
nrow(data5)
wordcount <- table(data5)
wordcloud <-sort(wordcount,decreasing = T)
head(wordcloud)
txt2 <- readLines("네이버영화gsub.txt")
for(i in 1:length(txt2)) {
data4 <- gsub(txt2[i],"",data3)
}
length(txt2)
write(data4,"parasite_Naver.txt")
data5 <- read.table("parasite_Naver.txt")
nrow(data5)
